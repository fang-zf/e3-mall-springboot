server:
  port: 8080
  #servlet: 
    #context-path: /myblog
    
spring: 
  datasource: 
    url: jdbc:mysql://localhost:3306/e3-mall?useUnicode=true&characterEncoding=utf8
    username: root
    password: mysql
    driver-class-name: com.mysql.jdbc.Driver
  #activemq  
  activemq: 
    broker-url: tcp://192.168.0.129:61616 #activeMQ地址
    user: admin
    password: admin
    in-memory: false #是否启用内存模式（也就是不安装MQ，项目启动时同时也启动一个MQ实例）
    packages: 
      trust-all: true  #信任所有的包 如果直接发送对象消息，那么必须设置spring.activemq.packages.trust-all为true；另外如果你想开始消息持久化就必须spring.activemq.in-memory=false选项。
    #pool: 
    #  enabled: false #关闭线程池 默认关闭
  jms: 
    pub-sub-domain: true #开启支持发布订阅模型，activemq默认只支持点对点
  #redis
  redis: 
    host: 192.168.0.129
    port: 6379
    timeout: 5000 #连接超时时间（毫秒）
    jedis: 
      pool:
        max-active: 50 #连接池最大连接数（使用负值表示没有限制）
        max-wait: 3000 #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 10 #连接池中的最大空闲连接
        min-idle: 2  #连接池中的最小空闲连接
  
#mybatis
mybatis: 
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.e3mall.springboot.pojo #扫描实体类
  configuration: 
    mapUnderscoreToCamelCase: true #开启驼峰命名
    aggressiveLazyLoading: false #延迟加载
    lazyLoadingEnabled: true
    
dubbo:
  application: 
    name: e3-manager #指定当前服务/应用的名字（同样的服务名字相同，不要和别的服务同名）
  registry: 
    protocol: zookeeper #指定注册中心的位置
    address: 192.168.0.129:2181
  protocol: 
    name: dubbo #指定通信规则（通信协议？通信端口）
    port: 20880
  consumer: 
    # 关闭所有服务的启动时检查
    check: false

#商品数据在缓存中key的前缀
REDIS_ITEM_PRE: ITEM_INFO
#商品数据缓存的过期时间，默认为一小时
ITEM_CACHE_EXPIRE: 3600